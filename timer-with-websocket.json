[
  {
    "id": "5f6a0eba.6d29b",
    "type": "tab",
    "label": "WebSocket ",
    "disabled": false,
    "info": "Simple Web page with live data updates via websocket\n\nhttps://flows.nodered.org/flow/8666510f94ad422e4765"
  },
  {
    "id": "379769bd.ef3c96",
    "type": "inject",
    "z": "5f6a0eba.6d29b",
    "name": "Tick every 5 secs",
    "props": [{ "p": "payload" }, { "p": "topic", "vt": "str" }],
    "repeat": "5",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "test",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 200,
    "wires": [["362a650e.a221aa"]]
  },
  {
    "id": "2009a3b6.21851c",
    "type": "websocket out",
    "z": "5f6a0eba.6d29b",
    "name": "",
    "server": "cd3e7034.e02a5",
    "client": "",
    "x": 510,
    "y": 200,
    "wires": []
  },
  {
    "id": "98fb2b1f.32da78",
    "type": "http response",
    "z": "5f6a0eba.6d29b",
    "name": "",
    "statusCode": "",
    "headers": {},
    "x": 481,
    "y": 140,
    "wires": []
  },
  {
    "id": "3285a115.bc661e",
    "type": "http in",
    "z": "5f6a0eba.6d29b",
    "name": "",
    "url": "/simple",
    "method": "get",
    "upload": false,
    "swaggerDoc": "",
    "x": 112,
    "y": 140,
    "wires": [["8243ba50.f88718"]]
  },
  {
    "id": "8243ba50.f88718",
    "type": "template",
    "z": "5f6a0eba.6d29b",
    "name": "Simple Web Page",
    "field": "payload",
    "fieldType": "msg",
    "format": "html",
    "syntax": "mustache",
    "template": "<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Simple Live Display</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/simple\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<p>\"+data+\"</p>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h1>Дисплей реального времени</h1>\n        <div id=\"messages\"></div>\n        <button type=\"button\" onclick='doit(\"click\");'>Click to send message</button>\n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n",
    "x": 309,
    "y": 140,
    "wires": [["98fb2b1f.32da78"]]
  },
  {
    "id": "362a650e.a221aa",
    "type": "function",
    "z": "5f6a0eba.6d29b",
    "name": "format time nicely",
    "func": "msg.payload = Date(msg.payload).toString();\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "x": 298,
    "y": 200,
    "wires": [["2009a3b6.21851c"]]
  },
  {
    "id": "7a22d39d.1c8b1c",
    "type": "websocket in",
    "z": "5f6a0eba.6d29b",
    "name": "",
    "server": "cd3e7034.e02a5",
    "client": "",
    "x": 297,
    "y": 252,
    "wires": [["e5855ab1.6cd2f8"]]
  },
  {
    "id": "e5855ab1.6cd2f8",
    "type": "debug",
    "z": "5f6a0eba.6d29b",
    "name": "",
    "active": true,
    "tosidebar": true,
    "console": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 487,
    "y": 252,
    "wires": []
  },
  {
    "id": "f12f3c41.17c0e",
    "type": "comment",
    "z": "5f6a0eba.6d29b",
    "name": "**Simple Web page with live data updates via websocket**",
    "info": "**Simple Web page with live data updates via websocket**\nThis flow creates a simple web page at 'http://{your-server-ip:1880/simple'\n\nThe web page then connects back to the server using a websocket and receives time updates every 5 seconds and updates the web page with that information.\n\nThere is also a simple button to push a message back to the server - which will appear in the debug.",
    "x": 250,
    "y": 60,
    "wires": []
  },
  {
    "id": "cd3e7034.e02a5",
    "type": "websocket-listener",
    "z": "5f6a0eba.6d29b",
    "path": "/ws/simple",
    "wholemsg": "false"
  }
]
